// Function to strip the unit of a value.
// This function is used to perform mathematical operations on values with units.
@function strip-unit($value) {
	// It returns the value divided by the value itself plus one with no unit.
	@return math.div($value, $value * 0 + 1);
}

// Mixin for fluid typography.
// This mixin dynamically adjusts the font size based on the viewport width.
// Parameters:
// - $min-vw: The minimum viewport width.
// - $max-vw: The maximum viewport width.
// - $min-font-size: The minimum font size.
// - $max-font-size: The maximum font size.
// All parameters should be in rem units.
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	// Get the units of the parameters.
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	// If all units are the same.
	@if $u1==$u2 and $u1==$u3 and $u1==$u4 {
		// Set the base font size.
		& {
			font-size: $min-font-size;

			// At a viewport width greater than the minimum, gradually increase the font size.
			@media screen and (min-width: $min-vw) {
				font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}

			// At a viewport width greater than the maximum, set the font size to the maximum.
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

// Define the minimum and maximum viewport widths.
// These values should be in rem units.
$min_width: 23.43rem; // 375px
$max_width: 100rem; // 1600px
